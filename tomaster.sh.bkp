#!/bin/bash

# 01 
# Dichiaro le variabili iniziali e Colori ANSI
#
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color
DEFAULT_BRANCH="sviluppo"
DEFAULT_SERVER="192.168.30.9"

# 02
# Funzione per chiedere conferma
#
confirm() {
  echo -e "${GREEN}Premi Invio per procedere oppure ESC/Q per uscire.${NC}"
  while true; do
    read -rsn1 input  # leggi un solo carattere
    if [[ "$input" == "" ]]; then
      break  # conferma con invio
    elif [[ "$input" =~ $'\e' ]] || [[ "$input" == "q" ]] || [[ "$input" == "Q" ]]; then
      echo -e "${RED}Operazione annullata dall'utente.${NC}"
      exit 1
    else
      echo -e "${GREEN}Premi Invio per procedere oppure ESC/Q per uscire.${NC}"
    fi
  done
  echo ""
}

# 03
# Controllo IP
#
echo -e "${YELLOW}Controllo che il server sia $DEFAULT_SERVER ...${NC}"
confirm
if ! ip addr | grep -q "$DEFAULT_SERVER"; then
  echo -e "${RED}Questo script va eseguito solo sul server $DEFAULT_SERVER ${NC}"
  exit 1
fi

# 04
# Checkout master, pull e merge
#
echo -e "${YELLOW}Eseguo il checkout sul branch master...${NC}"
confirm
git checkout master || { echo -e "${RED}Errore nel checkout master.${NC}"; exit 1; }
# Pull aggiornamento master
echo -e "${YELLOW}Aggiorno il branch master con pull...${NC}"
confirm
git fetch
git pull origin master || { echo "${RED}Errore nel pull master.${NC}"; exit 1; }
# Merge branch
echo -e "${GREEN}Inserisci il nome del branch da unire in master: (${DEFAULT_BRANCH}) ${NC}"
read MERGE_BRANCH
# Se l'utente preme invio senza digitare, usa il valore di default
MERGE_BRANCH=${MERGE_BRANCH:-$DEFAULT_BRANCH}
#Controllo l'esistenza del branch indicato
if ! git rev-parse --verify $MERGE_BRANCH; then
    echo -e "${RED}Il branch '$MERGE_BRANCH' non esiste${NC}"    
    exit 1
fi
echo -e "${YELLOW}Eseguo il merge del branch '$MERGE_BRANCH' in master...${NC}"
confirm
git merge "$MERGE_BRANCH" || { echo "Errore nel merge."; exit 1; }


# 05
# Cerco il file config in uso nell'applicazione e lo aggiorno
#
[ -f config.php ] && CONFIG="config.php"
[ -f pfconfig.php ] && CONFIG="pfconfig.php"
echo -e "${YELLOW}Aggiorno il file ${CONFIG} con la versione $VERSION...${NC}"
# Aggiorna config.php/pfconfig versione
VERSION="$(date +'%y.%m.%d')"
echo -e "${YELLOW}Aggiorno il file ${CONFIG} con la versione $VERSION...${NC}"
confirm
sed -i "s/'version'[[:space:]]*=>[[:space:]]*'[^']*'/'version' => '$VERSION'/g" $CONFIG

# 06
# Committo la modifica della config e push
#
echo -e "${YELLOW}Eseguo la commit della modifica al file di config...${NC}"
git add $CONFIG
git commit 
echo -e "${YELLOW}Eseguo il push su origin master della commit?...${NC}"
confirm
git push origin master

echo -e "${YELLOW}Operazione completata con successo.${NC}"
